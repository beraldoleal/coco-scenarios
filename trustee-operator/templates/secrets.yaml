# Those secrets are only created if the local values and local files exists.
# Used for local Helm installs to inject secrets from ignored files.
# When deploying with Argo CD, these files will be absent (not in Git),
# following Argo CD's best practice of managing secrets on the cluster side.
# https://argo-cd.readthedocs.io/en/stable/operator-manual/secret-management/


{{- $path := "files/publicKey.b64" }}
{{- if .Files.Glob $path }}
apiVersion: v1
kind: Secret
metadata:
  name: kbs-auth-public-key
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  publicKey: {{ .Files.Get $path | quote }}
{{- end }}

---

{{- if and .Values.secrets (hasKey .Values.secrets "kbsres1") }}
apiVersion: v1
kind: Secret
metadata:
  name: kbsres1
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
{{- range $key, $val := .Values.secrets.kbsres1 }}
  {{ $key }}: {{ $val | quote }}
{{- end }}
{{- end }}

---

{{- if and .Values.secrets (hasKey .Values.secrets "policy") }}
apiVersion: v1
kind: Secret
metadata:
  name: security-policy
  annotations:
    argocd.argoproj.io/sync-wave: "-2"
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  osc: |
{{ .Values.secrets.policy | indent 4 }}
{{- end }}
